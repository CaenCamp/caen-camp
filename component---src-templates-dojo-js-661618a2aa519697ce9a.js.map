{"version":3,"sources":["webpack:///./src/templates/dojo.js","webpack:///./src/components/talks/Tags.js","webpack:///./src/components/speakers/SpeakerTalk.js"],"names":["StyledLink","styled","Link","theme","black","DojoContainer","div","DateAndSpeakers","Description","Title","h1","data","dojo","formatDojoWithCraftsmen","rawDojo","craftsmen","edges","title","name","content","description","tags","to","className","aria-hidden","date","edition","map","speaker","key","slug","dangerouslySetInnerHTML","__html","html","query","Tags","ul","Tag","li","currentTag","sort","a","b","nameA","toLowerCase","nameB","tag","Item","greyLight","Profile","img","Name","span","src","picture","firstName","lastName"],"mappings":"2FACA,sMAYMA,EAAaC,YAAOC,KAAV,mEAAGD,CAAH,gBACH,qBAAGE,MAAkBC,SAG5BC,EAAgBJ,IAAOK,IAAV,sEAAGL,CAAH,qEAObM,EAAkBN,IAAOK,IAAV,wEAAGL,CAAH,qGAQfO,EAAcP,IAAOK,IAAV,oEAAGL,CAAH,yCAKJQ,EAAQR,IAAOS,GAAV,8DAAGT,CAAH,kEAKL,qBAAGE,MAAkBC,SAGnB,sBAAe,IAAZO,EAAW,EAAXA,KACRC,EAAOC,YAAwBF,EAAKG,QAASH,EAAKI,UAAUC,OAClE,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,+BAAQJ,EAAKK,OACb,0BAAMC,KAAK,cAAcC,QAASP,EAAKQ,cACvC,0BAAMF,KAAK,WAAWC,QAAO,GAAKP,EAAKS,QAE3C,kBAACrB,EAAD,CAAYsB,GAAG,gBACX,uBAAGC,UAAU,iBAAiBC,cAAY,SAD9C,sBAIA,kBAACnB,EAAD,KACI,kBAACE,EAAD,KACI,kBAAC,IAAD,CAAUkB,KAAMb,EAAKa,KAAMC,QAASd,EAAKc,UACxCd,EAAKG,UAAUY,KAAI,SAAAC,GAAO,OACvB,kBAAC,IAAD,CAAaC,IAAKD,EAAQE,KAAMF,QAASA,QAGjD,kBAACpB,EAAD,KACI,kBAACC,EAAD,KAAQG,EAAKK,OACb,kBAAC,IAAD,CAAMI,KAAMT,EAAKS,OACjB,yBAAKU,wBAAyB,CAAEC,OAAQpB,EAAKqB,aAQ9D,IAAMC,EAAK,a,mFCzEZC,EAAOlC,IAAOmC,GAAV,2DAAGnC,CAAH,4EAUJoC,EAAMpC,IAAOqC,GAAV,gEAAGrC,CAAH,irBAuDM,oBAAGoB,EAAH,EAAGA,KAAMkB,EAAT,EAASA,WAAT,OACX,kBAACJ,EAAD,KAAOd,EAAKmB,MAAK,SAASC,EAAGC,GACzB,IAAIC,EAAQF,EAAEG,cAAeC,EAAQH,EAAEE,cACvC,OAAID,EAAQE,GACH,EACLF,EAAQE,EACJ,EACD,KAETlB,KAAI,SAAAmB,GAAG,OAAI,kBAACT,EAAD,CAAKd,UAAWuB,GAAOP,EAAa,UAAY,GAAIV,IAAKiB,GAAK,kBAAC,IAAD,CAAMxB,GAAI,cAAcwB,GAAMA,U,iCC9E7G,2CAIaC,EAAO9C,IAAOK,IAAV,uEAAGL,CAAH,gNAEO,qBAAGE,MAAkB6C,aAahCC,EAAUhD,IAAOiD,IAAV,0EAAGjD,CAAH,+CAMPkD,EAAOlD,IAAOmD,KAAV,uEAAGnD,CAAH,sFAIJ,qBAAGE,MAAkBC,SAInB,oBAAGwB,EAAH,EAAGA,QAAH,OACX,kBAACmB,EAAD,KACI,kBAAC,IAAD,CAAMzB,GAAE,aAAeM,EAAQE,MAC3B,kBAACmB,EAAD,CAASI,IAAG,aAAezB,EAAQ0B,UACnC,kBAACH,EAAD,KACKvB,EAAQ2B,UADb,IACyB3B,EAAQ4B","file":"component---src-templates-dojo-js-661618a2aa519697ce9a.js","sourcesContent":["import { graphql } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport Link from 'gatsby-link';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { formatDojoWithCraftsmen } from '../utils/formatters';\nimport { SingleColumn } from '../components/Content';\nimport Calendar from '../components/talks/Calendar';\nimport Layout from '../components/layout';\nimport SpeakerTalk from '../components/speakers/SpeakerTalk';\nimport Tags from '../components/talks/Tags';\n\nconst StyledLink = styled(Link)`\n    color: ${({ theme }) => theme.black};\n`;\n\nconst DojoContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: left;\n    margin: 4rem 0;\n`;\n\nconst DateAndSpeakers = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin-right: 2rem;\n`;\n\nconst Description = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const Title = styled.h1`\n    font-size: 2rem;\n    text-align: left;\n    padding: 0;\n    margin: 0;\n    color: ${({ theme }) => theme.black};\n`;\n\nexport default ({ data }) => {\n    const dojo = formatDojoWithCraftsmen(data.rawDojo, data.craftsmen.edges);\n    return (\n        <Layout>\n            <SingleColumn>\n                <Helmet>\n                    <title>{dojo.title}</title>\n                    <meta name=\"description\" content={dojo.description} />\n                    <meta name=\"keywords\" content={`${dojo.tags}`} />\n                </Helmet>\n                <StyledLink to=\"/coding-dojo\">\n                    <i className=\"fa fa-list-alt\" aria-hidden=\"true\" /> Retour Ã \n                    la liste\n                </StyledLink>\n                <DojoContainer>\n                    <DateAndSpeakers>\n                        <Calendar date={dojo.date} edition={dojo.edition} />\n                        {dojo.craftsmen.map(speaker => (\n                            <SpeakerTalk key={speaker.slug} speaker={speaker} />\n                        ))}\n                    </DateAndSpeakers>\n                    <Description>\n                        <Title>{dojo.title}</Title>\n                        <Tags tags={dojo.tags} />\n                        <div dangerouslySetInnerHTML={{ __html: dojo.html }} />\n                    </Description>\n                </DojoContainer>\n            </SingleColumn>\n        </Layout>\n    );\n};\n\nexport const query = graphql`\n    query DojoQuery($slug: String!) {\n        rawDojo: markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n            html\n            frontmatter {\n                title\n                date\n                tags\n                description\n                craftsmen\n            }\n        }\n        craftsmen: allMarkdownRemark(\n            filter: { fileAbsolutePath: { glob: \"**/speakers/**\" } }\n        ) {\n            edges {\n                node {\n                    id\n                    frontmatter {\n                        firstName\n                        lastName\n                        picture\n                        resume\n                        links {\n                            title\n                            url\n                        }\n                        slug\n                    }\n                }\n            }\n        }\n    }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Link from 'gatsby-link';\n\nconst Tags = styled.ul`\n    list-style: none;\n    margin: 0;\n    overflow: hidden;\n    padding: 0;\n    & > li {\n        float: left;\n    }\n`;\n\nconst Tag = styled.li`\n    background: #eee;\n    border-radius: 3px 0 0 3px;\n    color: #999;\n    display: inline-block;\n    height: 26px;\n    line-height: 26px;\n    padding: 0 20px 0 23px;\n    position: relative;\n    margin: 0 10px 10px 0;\n    text-decoration: none;\n    -webkit-transition: color 0.2s;\n\n    a {\n        color: black;\n    }\n\n    &::before {\n        background: #fff;\n        border-radius: 10px;\n        box-shadow: inset 0 1px rgba(0, 0, 0, 0.25);\n        content: '';\n        height: 6px;\n        left: 10px;\n        position: absolute;\n        width: 6px;\n        top: 10px;\n    }\n\n    &::after {\n        background: #fff;\n        border-bottom: 13px solid transparent;\n        border-left: 10px solid #eee;\n        border-top: 13px solid transparent;\n        content: '';\n        position: absolute;\n        right: 0;\n        top: 0;\n    }\n\n    &.current,\n    &:hover {\n        background-color: crimson;\n        color: white;\n        a {\n            color: white;\n        }\n    }\n\n    &.current::after,\n    &:hover::after {\n        border-left-color: crimson;\n    }\n`;\n\nexport default ({ tags, currentTag }) => (\n    <Tags>{tags.sort(function(a, b){\n        var nameA = a.toLowerCase(), nameB = b.toLowerCase();\n        if (nameA < nameB) //sort string ascending\n         return -1;\n        if (nameA > nameB)\n         return 1;\n        return 0; //default return value (no sorting)\n       }\n    ).map(tag => <Tag className={tag == currentTag ? 'current' : ''} key={tag}><Link to={\"/talks?tag=\"+tag}>{tag}</Link></Tag>)}</Tags>\n);\n","import React from 'react';\nimport styled from 'styled-components';\nimport Link from 'gatsby-link';\n\nexport const Item = styled.div`\n    text-align: center;\n    border: 1px solid ${({ theme }) => theme.greyLight};\n    border-radius: 0.5rem;\n    box-shadow: 2px 2px 5px rgba(235, 235, 235, 0.5);\n    margin: 1rem 0;\n    width: 80px;\n    a {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        padding: 1rem 0;\n    }\n`;\n\nexport const Profile = styled.img`\n    border-radius: 50%;\n    width: 60px;\n    height: 60px;\n`;\n\nexport const Name = styled.span`\n    font-size: 1rem;\n    text-align: center;\n    padding: 1rem;\n    color: ${({ theme }) => theme.black};\n    font-variant: small-caps;\n`;\n\nexport default ({ speaker }) => (\n    <Item>\n        <Link to={`/speakers/${speaker.slug}`}>\n            <Profile src={`/speakers/${speaker.picture}`} />\n            <Name>\n                {speaker.firstName} {speaker.lastName}\n            </Name>\n        </Link>\n    </Item>\n);\n"],"sourceRoot":""}