{"version":3,"sources":["webpack:///./src/pages/speakers.js","webpack:///./src/components/speakers/Links.js","webpack:///./src/components/speakers/listItem.js"],"names":["SpeakerContainer","styled","div","speakers","data","edges","map","speaker","formatSpeakerWithTalksLightningsAndDojos","node","title","name","content","id","key","to","src","query","LinksContainer","theme","grey","validLinks","Links","handleClick","event","stopPropagation","nativeEvent","stopImmediatePropagation","render","links","this","props","filter","link","includes","toLowerCase","url","class","filterLinks","length","href","onClick","className","Component","Item","greyLight","mobileSize","Profile","img","Name","h3","Introduction","p","black","SpeakerListItem","slug","picture","firstName","lastName","resume"],"mappings":"0FACA,sLAgBaA,EAAmBC,IAAOC,IAAV,iFAAGD,CAAH,0FAQd,sBAAe,IACpBE,EADmB,EAAXC,KACQD,SAASE,MAAMC,KAAI,SAAAC,GAAO,OAC5CC,YAAyCD,EAAQE,SAGrD,OACI,kBAAC,IAAD,KACI,6BACI,kBAAC,SAAD,CAAQC,MAAM,8BACV,0BAAMC,KAAK,cAAcC,QAAQ,yBAErC,kBAAC,IAAD,CAASC,GAAG,uBACR,kBAAC,IAAD,KACI,kBAACb,EAAD,KACKG,EAASG,KAAI,SAAAC,GAAO,OACjB,kBAAC,IAAD,CACIO,IAAKP,EAAQM,GACbN,QAASA,OAGjB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMQ,GAAG,sBACL,kBAAC,IAAD,CAASC,IAAI,sBACb,kBAAC,IAAD,aACA,kBAAC,IAAD,2EAc7B,IAAMC,EAAK,c,8FC5DlB,IAAMC,E,KAAiBjB,EAAOC,IAAV,wEAAGD,CAAH,iJASH,qBAAGkB,MAAkBC,QAKhCC,EAAa,CACf,SACA,cACA,WACA,SACA,QACA,iBACA,WAciBC,E,4JACjBC,YAAc,SAAAC,GACVA,EAAMC,kBACND,EAAME,YAAYC,4B,4GAGtBC,OAAA,WAAU,IAAD,OACCC,EAAQC,KAAKC,MAAMF,MAlBb,SAAAA,GAAK,OACrBA,EACKG,QAAO,SAAAC,GAAI,OAAIZ,EAAWa,SAASD,EAAKvB,MAAMyB,kBAC9C7B,KAAI,SAAA2B,GAAI,MAAK,CACVG,IAAKH,EAAKG,IACVC,MACmB,UAAfJ,EAAKvB,MACC,iBADN,MAEYuB,EAAKvB,MAAMyB,kBAUEG,CAAYR,KAAKC,MAAMF,OAAS,GACjE,OACI,kBAACX,EAAD,KACKW,EAAMU,OAAS,GACZV,EAAMvB,KAAI,SAAA2B,GAAI,OACV,uBACInB,IAAKmB,EAAKI,MACVG,KAAMP,EAAKG,IACXK,QAAS,EAAKlB,aAEd,uBAAGmB,UAAS,MAAQT,EAAKI,c,GAjBlBM,c,iCCtCnC,uOAOaC,EAAO3C,IAAOC,IAAV,qEAAGD,CAAH,mQACO,qBAAGkB,MAAkB0B,aAYpB,SAAAd,GAAK,OAAIA,EAAMZ,MAAM2B,cAMjCC,EAAU9C,IAAO+C,IAAV,wEAAG/C,CAAH,qHAKK,SAAA8B,GAAK,OAAIA,EAAMZ,MAAM2B,cAMjCG,EAAOhD,IAAOiD,GAAV,qEAAGjD,CAAH,mEAOJkD,EAAelD,IAAOmD,EAAV,6EAAGnD,CAAH,6EAKZ,qBAAGkB,MAAkBkC,SAGrBC,EAAkB,SAAC,GAAD,IAAG/C,EAAH,EAAGA,QAAH,OAC3B,kBAACqC,EAAD,KACI,kBAAC,IAAD,CAAM7B,GAAE,aAAeR,EAAQgD,MAC3B,kBAACR,EAAD,CAAS/B,IAAG,aAAeT,EAAQiD,UACnC,kBAACP,EAAD,KACK1C,EAAQkD,UADb,IACyBlD,EAAQmD,UAEjC,kBAACP,EAAD,KAAe5C,EAAQoD,QACvB,kBAAC,IAAD,CAAO9B,MAAOtB,EAAQsB","file":"component---src-pages-speakers-js-4f60ea4da4032e644714.js","sourcesContent":["import { graphql } from 'gatsby';\nimport { Helmet } from 'react-helmet';\nimport Link from 'gatsby-link';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { Content, SingleColumn } from '../components/Content';\nimport { formatSpeakerWithTalksLightningsAndDojos } from '../utils/formatters';\nimport Layout from '../components/layout';\nimport {\n    SpeakerListItem,\n    Item,\n    Profile,\n    Name,\n    Introduction,\n} from '../components/speakers/listItem';\n\nexport const SpeakerContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: row;\n    align-items: top;\n    justify-content: left;\n`;\n\nexport default ({ data }) => {\n    const speakers = data.speakers.edges.map(speaker =>\n        formatSpeakerWithTalksLightningsAndDojos(speaker.node),\n    );\n\n    return (\n        <Layout>\n            <div>\n                <Helmet title=\"CaenCamp: proposez un talk\">\n                    <meta name=\"description\" content=\"Participez CaenCamp\" />\n                </Helmet>\n                <Content id=\"callForPaperContent\">\n                    <SingleColumn>\n                        <SpeakerContainer>\n                            {speakers.map(speaker => (\n                                <SpeakerListItem\n                                    key={speaker.id}\n                                    speaker={speaker}\n                                />\n                            ))}\n                            <Item>\n                                <Link to=\"/call-for-speakers\">\n                                    <Profile src=\"/speakers/you.jpg\" />\n                                    <Name>Vous</Name>\n                                    <Introduction>\n                                        Rejoignez les autres speakers ! Proposez\n                                        un sujet de talk.\n                                    </Introduction>\n                                </Link>\n                            </Item>\n                        </SpeakerContainer>\n                    </SingleColumn>\n                </Content>\n            </div>\n        </Layout>\n    );\n};\n\nexport const query = graphql`\n    query SpeakersQuery {\n        speakers: allMarkdownRemark(\n            sort: { order: ASC, fields: [frontmatter___lastName] }\n            filter: { fileAbsolutePath: { glob: \"**/speakers/**\" } }\n        ) {\n            edges {\n                node {\n                    id\n                    frontmatter {\n                        firstName\n                        lastName\n                        slug\n                        resume\n                        picture\n                        links {\n                            title\n                            url\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst LinksContainer = styled.div`\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: row;\n    align-items: top;\n    justify-content: center;\n    margin-top: 1rem;\n    a {\n        color: ${({ theme }) => theme.grey};\n        margin: 0 5px;\n    }\n`;\n\nconst validLinks = [\n    'github',\n    'hacker-news',\n    'linkedin',\n    'medium',\n    'perso',\n    'stack-overflow',\n    'twitter',\n];\n\nconst filterLinks = links =>\n    links\n        .filter(link => validLinks.includes(link.title.toLowerCase()))\n        .map(link => ({\n            url: link.url,\n            class:\n                link.title === 'perso'\n                    ? 'fa-user-circle'\n                    : `fa-${link.title.toLowerCase()}`,\n        }));\n\nexport default class Links extends Component {\n    handleClick = event => {\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n    };\n\n    render() {\n        const links = this.props.links ? filterLinks(this.props.links) : [];\n        return (\n            <LinksContainer>\n                {links.length > 0 &&\n                    links.map(link => (\n                        <a\n                            key={link.class}\n                            href={link.url}\n                            onClick={this.handleClick}\n                        >\n                            <i className={`fa ${link.class}`} />\n                        </a>\n                    ))}\n            </LinksContainer>\n        );\n    }\n}\n","import Link from 'gatsby-link';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { speakerPropType } from '../../utils/caenCampPropTypes';\nimport Links from './Links';\n\nexport const Item = styled.div`\n    border: 1px solid ${({ theme }) => theme.greyLight};\n    height: 290px;\n    width: 190px;\n    margin: 1rem 1rem 1rem 0;\n    padding: 1rem;\n    border-radius: 0.5rem;\n    box-shadow: 2px 2px 5px rgba(235, 235, 235, 0.5);\n    a {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    }\n    @media (max-width: ${props => props.theme.mobileSize}) {\n        width: 100%;\n        height: auto;\n    }\n`;\n\nexport const Profile = styled.img`\n    border-radius: 50%;\n    width: 115px;\n    height: 115px;\n    margin-bottom: 0.8rem;\n    @media (max-width: ${props => props.theme.mobileSize}) {\n        width: 75px;\n        height: 75px;\n    }\n`;\n\nexport const Name = styled.h3`\n    font-size: 1.2rem;\n    text-align: center;\n    padding: 0;\n    margin: 0.3rem 0;\n`;\n\nexport const Introduction = styled.p`\n    text-align: center;\n    font-size: 1rem;\n    padding: 0;\n    margin: 0.2rem 0 0;\n    color: ${({ theme }) => theme.black};\n`;\n\nexport const SpeakerListItem = ({ speaker }) => (\n    <Item>\n        <Link to={`/speakers/${speaker.slug}`}>\n            <Profile src={`/speakers/${speaker.picture}`} />\n            <Name>\n                {speaker.firstName} {speaker.lastName}\n            </Name>\n            <Introduction>{speaker.resume}</Introduction>\n            <Links links={speaker.links} />\n        </Link>\n    </Item>\n);\n\nSpeakerListItem.propTypes = {\n    speaker: speakerPropType,\n};\n"],"sourceRoot":""}