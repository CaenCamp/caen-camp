{"version":3,"sources":["webpack:///./src/components/talks/Tags.js","webpack:///./src/pages/coding-dojo.js","webpack:///./src/components/dojos/listItem.js","webpack:///./src/components/speakers/MinimalView.js"],"names":["Tags","styled","ul","Tag","li","tags","currentTag","sort","a","b","nameA","toLowerCase","nameB","map","tag","className","key","to","DojoContainer","div","data","dojos","edges","dojo","formatDojoWithCraftsmen","node","craftsmen","title","name","content","id","query","Item","theme","greyLight","props","mobileSize","Description","Title","h3","Resume","p","black","Speakers","DojoListItem","slug","date","edition","length","craftman","speaker","description","Profile","img","Name","span","src","picture","firstName","lastName"],"mappings":"iKAIMA,EAAOC,IAAOC,GAAV,2DAAGD,CAAH,4EAUJE,EAAMF,IAAOG,GAAV,gEAAGH,CAAH,irBAuDM,oBAAGI,EAAH,EAAGA,KAAMC,EAAT,EAASA,WAAT,OACX,kBAACN,EAAD,KAAOK,EAAKE,MAAK,SAASC,EAAGC,GACzB,IAAIC,EAAQF,EAAEG,cAAeC,EAAQH,EAAEE,cACvC,OAAID,EAAQE,GACH,EACLF,EAAQE,EACJ,EACD,KAETC,KAAI,SAAAC,GAAG,OAAI,kBAACX,EAAD,CAAKY,UAAWD,GAAOR,EAAa,UAAY,GAAIU,IAAKF,GAAK,kBAAC,IAAD,CAAMG,GAAI,cAAcH,GAAMA,U,kCC7E7G,4LASaI,EAAgBjB,IAAOkB,IAAV,iFAAGlB,CAAH,0FAQX,sBAAe,IAAZmB,EAAW,EAAXA,KACRC,EAAQD,EAAKC,MAAMC,MAAMT,KAAI,SAAAU,GAAI,OACnCC,YAAwBD,EAAKE,KAAML,EAAKM,UAAUJ,UAGtD,OACI,kBAAC,IAAD,KACI,6BACI,kBAAC,SAAD,CAAQK,MAAM,8BACV,0BACIC,KAAK,cACLC,QAAQ,6CAGhB,kBAAC,IAAD,CAASC,GAAG,eACR,kBAAC,IAAD,KACI,kBAACZ,EAAD,KACKG,EAAMR,KAAI,SAAAU,GAAI,OACX,kBAAC,IAAD,CAAcP,IAAKO,EAAKO,GAAIP,KAAMA,aAU3D,IAAMQ,EAAK,a,kCC9ClB,4IASMC,EAAO/B,IAAOkB,IAAV,iEAAGlB,CAAH,wRACc,qBAAGgC,MAAkBC,aAUhB,SAAAC,GAAK,OAAIA,EAAMF,MAAMG,cAIzB,SAAAD,GAAK,OAAIA,EAAMF,MAAMG,cAMxCC,EAAcpC,IAAOkB,IAAV,wEAAGlB,CAAH,uBAIXqC,EAAQrC,IAAOsC,GAAV,kEAAGtC,CAAH,iGAIc,SAAAkC,GAAK,OAAIA,EAAMF,MAAMG,cAMxCI,EAASvC,IAAOwC,EAAV,mEAAGxC,CAAH,0DACC,qBAAGgC,MAAkBS,SAM5BC,EAAW1C,IAAOkB,IAAV,qEAAGlB,CAAH,uDAMD2C,EAAe,SAAC,GAAD,IAAGrB,EAAH,EAAGA,KAAH,OACxB,kBAACS,EAAD,KACI,kBAAC,IAAD,CAAMf,GAAE,gBAAkBM,EAAKsB,MAC3B,kBAAC,IAAD,CAAUC,KAAMvB,EAAKuB,KAAMC,QAASxB,EAAKwB,UACzC,kBAACV,EAAD,KACI,kBAACC,EAAD,KAAQf,EAAKI,OACb,kBAACgB,EAAD,KACKpB,EAAKG,UAAUsB,OAAS,GACrBzB,EAAKG,UAAUb,KAAI,SAAAoC,GAAQ,OACvB,kBAAC,IAAD,CAAaC,QAASD,QAGlC,kBAACT,EAAD,KAASjB,EAAK4B,aACd,kBAAC,IAAD,CAAM9C,KAAMkB,EAAKlB,Y,kCCtEjC,qCAGa2B,EAAO/B,IAAOkB,IAAV,wEAAGlB,CAAH,2EAOJmD,EAAUnD,IAAOoD,IAAV,2EAAGpD,CAAH,mEAOPqD,EAAOrD,IAAOsD,KAAV,wEAAGtD,CAAH,yDAIJ,qBAAGgC,MAAkBS,SAGnB,oBAAGQ,EAAH,EAAGA,QAAH,OACX,kBAAClB,EAAD,KACI,kBAACoB,EAAD,CAASI,IAAG,aAAeN,EAAQO,UACnC,kBAACH,EAAD,KACKJ,EAAQQ,UADb,IACyBR,EAAQS","file":"component---src-pages-coding-dojo-js-631502c4ccedf887f426.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport Link from 'gatsby-link';\n\nconst Tags = styled.ul`\n    list-style: none;\n    margin: 0;\n    overflow: hidden;\n    padding: 0;\n    & > li {\n        float: left;\n    }\n`;\n\nconst Tag = styled.li`\n    background: #eee;\n    border-radius: 3px 0 0 3px;\n    color: #999;\n    display: inline-block;\n    height: 26px;\n    line-height: 26px;\n    padding: 0 20px 0 23px;\n    position: relative;\n    margin: 0 10px 10px 0;\n    text-decoration: none;\n    -webkit-transition: color 0.2s;\n\n    a {\n        color: black;\n    }\n\n    &::before {\n        background: #fff;\n        border-radius: 10px;\n        box-shadow: inset 0 1px rgba(0, 0, 0, 0.25);\n        content: '';\n        height: 6px;\n        left: 10px;\n        position: absolute;\n        width: 6px;\n        top: 10px;\n    }\n\n    &::after {\n        background: #fff;\n        border-bottom: 13px solid transparent;\n        border-left: 10px solid #eee;\n        border-top: 13px solid transparent;\n        content: '';\n        position: absolute;\n        right: 0;\n        top: 0;\n    }\n\n    &.current,\n    &:hover {\n        background-color: crimson;\n        color: white;\n        a {\n            color: white;\n        }\n    }\n\n    &.current::after,\n    &:hover::after {\n        border-left-color: crimson;\n    }\n`;\n\nexport default ({ tags, currentTag }) => (\n    <Tags>{tags.sort(function(a, b){\n        var nameA = a.toLowerCase(), nameB = b.toLowerCase();\n        if (nameA < nameB) //sort string ascending\n         return -1;\n        if (nameA > nameB)\n         return 1;\n        return 0; //default return value (no sorting)\n       }\n    ).map(tag => <Tag className={tag == currentTag ? 'current' : ''} key={tag}><Link to={\"/talks?tag=\"+tag}>{tag}</Link></Tag>)}</Tags>\n);\n","import { graphql } from 'gatsby';\nimport { Helmet } from 'react-helmet';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { Content, SingleColumn } from '../components/Content';\nimport { DojoListItem } from '../components/dojos/listItem';\nimport { formatDojoWithCraftsmen } from '../utils/formatters';\nimport Layout from '../components/layout';\n\nexport const DojoContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: row;\n    align-items: top;\n    justify-content: left;\n`;\n\nexport default ({ data }) => {\n    const dojos = data.dojos.edges.map(dojo =>\n        formatDojoWithCraftsmen(dojo.node, data.craftsmen.edges),\n    );\n\n    return (\n        <Layout>\n            <div>\n                <Helmet title=\"CaenCamp: les coding dojos\">\n                    <meta\n                        name=\"description\"\n                        content=\"Affutez vos skills au Dojo des CaenCamp\"\n                    />\n                </Helmet>\n                <Content id=\"dojoContent\">\n                    <SingleColumn>\n                        <DojoContainer>\n                            {dojos.map(dojo => (\n                                <DojoListItem key={dojo.id} dojo={dojo} />\n                            ))}\n                        </DojoContainer>\n                    </SingleColumn>\n                </Content>\n            </div>\n        </Layout>\n    );\n};\n\nexport const query = graphql`\n    query DojosQuery {\n        dojos: allMarkdownRemark(\n            sort: { order: DESC, fields: [frontmatter___date] }\n            filter: { fileAbsolutePath: { glob: \"**/dojos/**\" } }\n        ) {\n            edges {\n                node {\n                    id\n                    frontmatter {\n                        title\n                        slug\n                        craftsmen\n                        date\n                        description\n                        tags\n                        edition\n                    }\n                }\n            }\n        }\n        craftsmen: allMarkdownRemark(\n            filter: { fileAbsolutePath: { glob: \"**/speakers/**\" } }\n        ) {\n            edges {\n                node {\n                    id\n                    frontmatter {\n                        firstName\n                        lastName\n                        picture\n                        slug\n                    }\n                }\n            }\n        }\n    }\n`;\n","import Link from 'gatsby-link';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { dojoPropType } from '../../utils/caenCampPropTypes';\nimport Calendar from '../talks/Calendar';\nimport MinimalView from '../speakers/MinimalView';\nimport Tags from '../talks/Tags';\n\nconst Item = styled.div`\n    border: 1px solid ${({ theme }) => theme.greyLight};\n    width: 100%;\n    margin: 1rem;\n    padding: 1rem;\n    border-radius: 0.5rem;\n    box-shadow: 2px 2px 5px rgba(235, 235, 235, 0.5);\n    a {\n        display: flex;\n        flex-direction: row;\n        align-items: left;\n        @media (max-width: ${props => props.theme.mobileSize}) {\n            flex-direction: column;\n        }\n    }\n    @media (max-width: ${props => props.theme.mobileSize}) {\n        margin: 0.5rem;\n        padding: 0.2rem;\n    }\n`;\n\nconst Description = styled.div`\n    margin-left: 2rem;\n`;\n\nconst Title = styled.h3`\n    font-size: 2rem;\n    margin: 0;\n    padding: 0;\n    @media (max-width: ${props => props.theme.mobileSize}) {\n        font-size: 1.4rem;\n        margin: 0.8rem 0;\n    }\n`;\n\nconst Resume = styled.p`\n    color: ${({ theme }) => theme.black};\n    margin: 1rem 0;\n    padding: 0;\n    font-style: italic;\n`;\n\nconst Speakers = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: left;\n`;\n\nexport const DojoListItem = ({ dojo }) => (\n    <Item>\n        <Link to={`/coding-dojo/${dojo.slug}`}>\n            <Calendar date={dojo.date} edition={dojo.edition} />\n            <Description>\n                <Title>{dojo.title}</Title>\n                <Speakers>\n                    {dojo.craftsmen.length > 0 &&\n                        dojo.craftsmen.map(craftman => (\n                            <MinimalView speaker={craftman} />\n                        ))}\n                </Speakers>\n                <Resume>{dojo.description}</Resume>\n                <Tags tags={dojo.tags} />\n            </Description>\n        </Link>\n    </Item>\n);\n\nDojoListItem.propTypes = {\n    dojo: dojoPropType,\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport const Item = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    margin-right: 1rem;\n`;\n\nexport const Profile = styled.img`\n    border-radius: 50%;\n    width: 30px;\n    height: 30px;\n    margin-right: 0.5rem;\n`;\n\nexport const Name = styled.span`\n    font-size: 1rem;\n    text-align: left;\n    padding: 0;\n    color: ${({ theme }) => theme.black};\n`;\n\nexport default ({ speaker }) => (\n    <Item>\n        <Profile src={`/speakers/${speaker.picture}`} />\n        <Name>\n            {speaker.firstName} {speaker.lastName}\n        </Name>\n    </Item>\n);"],"sourceRoot":""}