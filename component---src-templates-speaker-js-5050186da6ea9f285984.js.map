{"version":3,"sources":["webpack:///./src/templates/speaker.js","webpack:///./src/utils/caenCampPropTypes.js","webpack:///./node_modules/core-js/modules/es6.array.sort.js","webpack:///./src/components/speakers/Links.js","webpack:///./node_modules/core-js/modules/es7.array.includes.js","webpack:///./node_modules/date-fns/is_before/index.js","webpack:///./src/components/BackToList.js","webpack:///./src/components/dojos/listItem.js"],"names":["SpeakerContainer","styled","div","withConfig","displayName","componentId","Profile","img","SpeakerBio","Name","h1","_ref","theme","black","TalksContainer","DojoContainer","__webpack_exports__","_ref2","data","speaker","formatSpeakerWithTalksAndDojos","rawSpeaker","talks","edges","dojos","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_9__","_components_Content__WEBPACK_IMPORTED_MODULE_7__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","firstName","lastName","name","content","_components_BackToList__WEBPACK_IMPORTED_MODULE_8__","path","src","picture","_components_speakers_Links__WEBPACK_IMPORTED_MODULE_10__","links","dangerouslySetInnerHTML","__html","html","length","map","talk","_components_talks_listItem__WEBPACK_IMPORTED_MODULE_11__","key","id","Object","assign","speakers","dojo","_components_dojos_listItem__WEBPACK_IMPORTED_MODULE_5__","craftsmen","query","__webpack_require__","d","speakerPropType","dojoPropType","campPropType","prop_types__WEBPACK_IMPORTED_MODULE_0__","prop_types__WEBPACK_IMPORTED_MODULE_0___default","n","PropTypes","shape","string","isRequired","slug","resume","edition","number","arrayOf","title","image","$export","aFunction","toObject","fails","$sort","sort","test","P","F","undefined","comparefn","call","this","LinksContainer","grey","validLinks","Links","handleClick","event","stopPropagation","nativeEvent","stopImmediatePropagation","render","_this2","props","filter","link","includes","toLowerCase","url","class","filterLinks","react__WEBPACK_IMPORTED_MODULE_4___default","href","onClick","className","Component","$includes","el","arguments","parse","module","exports","dirtyDate","dirtyDateToCompare","date","dateToCompare","getTime","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","styled_components__WEBPACK_IMPORTED_MODULE_2__","StyledLink","Link","BackToListContainer","mobileSize","to","aria-hidden","Item","greyLight","Description","Title","h3","Resume","p","Speakers","DojoListItem","_ref3","react__WEBPACK_IMPORTED_MODULE_2___default","_talks_Calendar__WEBPACK_IMPORTED_MODULE_5__","craftman","_speakers_MinimalView__WEBPACK_IMPORTED_MODULE_6__","description","_talks_Tags__WEBPACK_IMPORTED_MODULE_7__","tags","propTypes"],"mappings":"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","file":"component---src-templates-speaker-js-5050186da6ea9f285984.js","sourcesContent":["import { graphql } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { DojoListItem } from '../components/dojos/listItem';\nimport { formatSpeakerWithTalksAndDojos } from '../utils/formatters';\nimport { SingleColumn } from '../components/Content';\nimport BackToList from '../components/BackToList';\nimport Layout from '../components/layout';\nimport Links from '../components/speakers/Links';\nimport TalkListItem from '../components/talks/listItem';\n\nconst SpeakerContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: left;\n    margin: 4rem 0;\n`;\n\nexport const Profile = styled.img`\n    border-radius: 50%;\n    width: 150px;\n    height: 150px;\n    margin: 0 1rem;\n`;\n\nconst SpeakerBio = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: left;\n    margin: 0;\n    padding: 0;\n`;\n\nexport const Name = styled.h1`\n    font-size: 2rem;\n    text-align: left;\n    padding: 0;\n    margin: 0;\n    color: ${({ theme }) => theme.black};\n`;\n\nconst TalksContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nconst DojoContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nexport default ({ data }) => {\n    const speaker = formatSpeakerWithTalksAndDojos(\n        data.rawSpeaker,\n        data.talks.edges,\n        data.dojos.edges,\n    );\n    return (\n        <Layout>\n            <SingleColumn>\n                <Helmet>\n                    <title>\n                        {speaker.firstName} {speaker.lastName}\n                    </title>\n                    <meta name=\"description\" content=\"A trouver\" />\n                    <meta name=\"keywords\" content=\"A voir\" />\n                </Helmet>\n                <BackToList path=\"/speakers\" />\n                <SpeakerContainer>\n                    <SpeakerBio>\n                        <Profile src={`/speakers/${speaker.picture}`} />\n                        <Links links={speaker.links} />\n                    </SpeakerBio>\n                    <SpeakerBio>\n                        <Name>\n                            {speaker.firstName} {speaker.lastName}\n                        </Name>\n                        <div\n                            dangerouslySetInnerHTML={{ __html: speaker.html }}\n                        />\n                    </SpeakerBio>\n                </SpeakerContainer>\n\n                {speaker.talks.length > 0 && (\n                    <TalksContainer>\n                        <h2>\n                            {speaker.talks.length === 1\n                                ? 'Son Talk'\n                                : 'Ses Talks'}\n                        </h2>\n                        {speaker.talks.map(talk => (\n                            <TalkListItem\n                                key={talk.id}\n                                talk={{\n                                    ...talk,\n                                    speakers: [],\n                                }}\n                            />\n                        ))}\n                    </TalksContainer>\n                )}\n\n                {speaker.dojos.length > 0 && (\n                    <DojoContainer>\n                        <h2>\n                            {speaker.dojos.length === 1\n                                ? 'Son Dojo'\n                                : 'Ses Dojos'}\n                        </h2>\n                        {speaker.dojos.map(dojo => (\n                            <DojoListItem\n                                key={dojo.id}\n                                dojo={{\n                                    ...dojo,\n                                    craftsmen: [],\n                                }}\n                            />\n                        ))}\n                    </DojoContainer>\n                )}\n            </SingleColumn>\n        </Layout>\n    );\n};\n\nexport const query = graphql`\n    query SpeakerBySlug($slug: String!) {\n        rawSpeaker: markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n            html\n            frontmatter {\n                firstName\n                lastName\n                picture\n                resume\n                links {\n                    title\n                    url\n                }\n                slug\n            }\n        }\n        talks: allMarkdownRemark(\n            filter: {\n                fileAbsolutePath: { glob: \"**/talks/**\" }\n                frontmatter: { published: { eq: true } }\n            }\n            sort: { order: DESC, fields: [frontmatter___edition] }\n        ) {\n            edges {\n                node {\n                    id\n                    frontmatter {\n                        edition\n                        title\n                        slug\n                        speakers\n                        date\n                        tags\n                        description\n                        video\n                    }\n                }\n            }\n        }\n        dojos: allMarkdownRemark(\n            filter: { fileAbsolutePath: { glob: \"**/dojos/**\" } }\n            sort: { order: DESC, fields: [frontmatter___edition] }\n        ) {\n            edges {\n                node {\n                    id\n                    frontmatter {\n                        title\n                        slug\n                        craftsmen\n                        date\n                        description\n                        tags\n                        edition\n                    }\n                }\n            }\n        }\n    }\n`;\n","import PropTypes from 'prop-types';\n\nexport const speakerPropType = PropTypes.shape({\n    firstName: PropTypes.string.isRequired,\n    lastName: PropTypes.string.isRequired,\n    slug: PropTypes.string,\n    picture: PropTypes.string,\n    resume: PropTypes.string,\n});\n\nexport const talkPropType = PropTypes.shape({\n    edition: PropTypes.number.isRequired,\n    slug: PropTypes.string.isRequired,\n    speakers: PropTypes.arrayOf(speakerPropType),\n    title: PropTypes.string.isRequired,\n});\n\nexport const dojoPropType = PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    slug: PropTypes.string.isRequired,\n    craftsmen: PropTypes.arrayOf(speakerPropType),\n});\n\nexport const campPropType = PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    slug: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    resume: PropTypes.string,\n});\n","'use strict';\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar toObject = require('./_to-object');\nvar fails = require('./_fails');\nvar $sort = [].sort;\nvar test = [1, 2, 3];\n\n$export($export.P + $export.F * (fails(function () {\n  // IE8-\n  test.sort(undefined);\n}) || !fails(function () {\n  // V8 bug\n  test.sort(null);\n  // Old WebKit\n}) || !require('./_strict-method')($sort)), 'Array', {\n  // 22.1.3.25 Array.prototype.sort(comparefn)\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? $sort.call(toObject(this))\n      : $sort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst LinksContainer = styled.div`\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: row;\n    align-items: top;\n    justify-content: center;\n    margin-top: 1rem;\n    a {\n        color: ${({ theme }) => theme.grey};\n        margin: 0 5px;\n    }\n`;\n\nconst validLinks = [\n    'github',\n    'hacker-news',\n    'linkedin',\n    'medium',\n    'perso',\n    'stack-overflow',\n    'twitter',\n];\n\nconst filterLinks = links =>\n    links\n        .filter(link => validLinks.includes(link.title.toLowerCase()))\n        .map(link => ({\n            url: link.url,\n            class:\n                link.title === 'perso'\n                    ? 'fa-user-circle'\n                    : `fa-${link.title.toLowerCase()}`,\n        }));\n\nexport default class Links extends Component {\n    handleClick = event => {\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n    };\n\n    render() {\n        const links = this.props.links ? filterLinks(this.props.links) : [];\n        return (\n            <LinksContainer>\n                {links.length > 0 &&\n                    links.map(link => (\n                        <a\n                            key={link.class}\n                            href={link.url}\n                            onClick={this.handleClick}\n                        >\n                            <i className={`fa ${link.class}`} />\n                        </a>\n                    ))}\n            </LinksContainer>\n        );\n    }\n}\n","'use strict';\n// https://github.com/tc39/Array.prototype.includes\nvar $export = require('./_export');\nvar $includes = require('./_array-includes')(true);\n\n$export($export.P, 'Array', {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nrequire('./_add-to-unscopables')('includes');\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Is the first date before the second one?\n *\n * @description\n * Is the first date before the second one?\n *\n * @param {Date|String|Number} date - the date that should be before the other one to return true\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is before the second date\n *\n * @example\n * // Is 10 July 1989 before 11 February 1987?\n * var result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> false\n */\nfunction isBefore (dirtyDate, dirtyDateToCompare) {\n  var date = parse(dirtyDate)\n  var dateToCompare = parse(dirtyDateToCompare)\n  return date.getTime() < dateToCompare.getTime()\n}\n\nmodule.exports = isBefore\n","import React from 'react';\nimport Link from 'gatsby-link';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n    color: ${({ theme }) => theme.black};\n`;\n\nconst BackToListContainer = styled.div`\n    @media (max-width: ${props => props.theme.mobileSize}) {\n        margin-top: 1.5em;\n    }\n`;\n\nexport default ({ path }) => (\n    <BackToListContainer>\n        <StyledLink to={path}>\n            <i className=\"fa fa-list-alt\" aria-hidden=\"true\" /> Retour à la\n            liste\n        </StyledLink>\n    </BackToListContainer>\n);","import Link from 'gatsby-link';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { dojoPropType } from '../../utils/caenCampPropTypes';\nimport Calendar from '../talks/Calendar';\nimport MinimalView from '../speakers/MinimalView';\nimport Tags from '../talks/Tags';\n\nconst Item = styled.div`\n    border: 1px solid ${({ theme }) => theme.greyLight};\n    width: 100%;\n    margin: 1rem;\n    padding: 1rem;\n    border-radius: 0.5rem;\n    box-shadow: 2px 2px 5px rgba(235, 235, 235, 0.5);\n    a {\n        display: flex;\n        flex-direction: row;\n        align-items: left;\n        @media (max-width: ${props => props.theme.mobileSize}) {\n            flex-direction: column;\n        }\n    }\n    @media (max-width: ${props => props.theme.mobileSize}) {\n        margin: 0.5rem;\n        padding: 0.2rem;\n    }\n`;\n\nconst Description = styled.div`\n    margin-left: 2rem;\n`;\n\nconst Title = styled.h3`\n    font-size: 2rem;\n    margin: 0;\n    padding: 0;\n    @media (max-width: ${props => props.theme.mobileSize}) {\n        font-size: 1.4rem;\n        margin: 0.8rem 0;\n    }\n`;\n\nconst Resume = styled.p`\n    color: ${({ theme }) => theme.black};\n    margin: 1rem 0;\n    padding: 0;\n    font-style: italic;\n`;\n\nconst Speakers = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: left;\n`;\n\nexport const DojoListItem = ({ dojo }) => (\n    <Item>\n        <Link to={`/coding-dojo/${dojo.slug}`}>\n            <Calendar date={dojo.date} edition={dojo.edition} />\n            <Description>\n                <Title>{dojo.title}</Title>\n                <Speakers>\n                    {dojo.craftsmen.length > 0 &&\n                        dojo.craftsmen.map(craftman => (\n                            <MinimalView speaker={craftman} />\n                        ))}\n                </Speakers>\n                <Resume>{dojo.description}</Resume>\n                <Tags tags={dojo.tags} />\n            </Description>\n        </Link>\n    </Item>\n);\n\nDojoListItem.propTypes = {\n    dojo: dojoPropType,\n};\n"],"sourceRoot":""}